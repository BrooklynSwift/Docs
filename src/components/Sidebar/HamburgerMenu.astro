---
import SidebarItems from "./SidebarItems.astro";
---

<button aria-label="Open hamburger menu button" class="hamburger-menu-open-button" aria-expanded="false">
	<svg viewBox="0 0 448 512" height="30px" width="30px">
		<path d="M0 96C0 78.3 14.3 64 32 64l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 128C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 288c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32L32 448c-17.7 0-32-14.3-32-32s14.3-32 32-32l384 0c17.7 0 32 14.3 32 32z"/>
	</svg>
</button>

<div class="hamburger-menu-container" role="dialog" aria-labelledby="Hamburger menu label">
	<div class="hamburger-menu">
		<button aria-label="Close hamburger menu button" class="hamburger-menu-close-button">
			<svg viewBox="0 0 384 512" height="30px" width="30px">
				<path d="M376.6 84.5c11.3-13.6 9.5-33.8-4.1-45.1s-33.8-9.5-45.1 4.1L192 206 56.6 43.5C45.3 29.9 25.1 28.1 11.5 39.4S-3.9 70.9 7.4 84.5L150.3 256 7.4 427.5c-11.3 13.6-9.5 33.8 4.1 45.1s33.8 9.5 45.1-4.1L192 306 327.4 468.5c11.3 13.6 31.5 15.4 45.1 4.1s15.4-31.5 4.1-45.1L233.7 256 376.6 84.5z"/>
			</svg>
		</button>
		<div class="sidebar-items">
			<SidebarItems />
		</div>
	</div>
</div>

<style>
	@media (width >= 48em) {
		.hamburger-menu-open-button {
			display: none;
		}

		.hamburger-menu-container {
			display: none;
		}
	}

	@media (width < 48em) {
		.hamburger-menu-open-button {
			background-color: transparent;
			border: none;
		}

		.hamburger-menu-open-button svg {
			fill: black;
		}

		:global(.dark) .hamburger-menu-open-button svg {
			fill: white;
		}

		.hamburger-menu-open-button[aria-expanded='true'] + .hamburger-menu-container {
			translate: 0;
		}

		.hamburger-menu-container {
			background-color: var(--near-background);
			position: fixed;
			top: 0;
			inset: 0;
			transition: translate 0.4s ease-in-out;
			translate: 100vw 0;
		}

		.hamburger-menu {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			margin: 30px 15px;
		}

		.hamburger-menu-close-button {
			align-self: flex-end;
			background-color: transparent;
			border: none;
		}

		.hamburger-menu-close-button svg {
			fill: black;
		}

		:global(.dark) .hamburger-menu-close-button svg {
			fill: white;
		}

		.sidebar-items {
			align-items: center;
			display: flex;
			flex-direction: column;
			justify-content: center;
			margin-top: 30px;
		}
	}

	@media (prefers-reduced-motion) {
		.hamburger-menu-open-button[aria-expanded='true'] + .hamburger-menu-container {
			opacity: 1;
		}
	}

	@media (width < 48em) and (prefers-reduced-motion) {
		.hamburger-menu-container {
			opacity: 0;
			translate: 0;
			transition: opacity 500ms ease-in-out;
		}
	}
</style>

<script>
	const mainContent = document.querySelector('.main-content')
	const hamburgerMenuContainer = document.querySelector<HTMLElement>('.hamburger-menu-container')
	const openButton = document.querySelector<HTMLElement>('.hamburger-menu-open-button')
	const closeButton = document.querySelector<HTMLElement>('.hamburger-menu-close-button')
	const media = window.matchMedia('(width < 40em)')

	function openMenu() {
		closeButton.focus()
		hamburgerMenuContainer.removeAttribute('inert')
		hamburgerMenuContainer.removeAttribute('style')
		// mainContent.setAttribute('inert', '')
		openButton.setAttribute('aria-expanded', 'true')
	}

	function closeMenu() {
		hamburgerMenuContainer.setAttribute('inert', '')
		// mainContent.removeAttribute('inert')
		openButton.focus()
		openButton.setAttribute('aria-expanded', 'false')

		setTimeout(() => {
			hamburgerMenuContainer.style.transition = 'none'
		}, 500)
	}

	function setupMenu(media) {
		if (media.matches) {
			hamburgerMenuContainer.setAttribute('inert', '')
			hamburgerMenuContainer.style.transition = 'none'
		}
		else {
			closeMenu()
			hamburgerMenuContainer.removeAttribute('inert')
		}
	}

	setupMenu(media)

	openButton.addEventListener('click', openMenu)
	closeButton.addEventListener('click', closeMenu)
	media.addEventListener('change', function (media) {
		setupMenu(media)
	})
</script>
